import itemsData from '../data/items.json';
import { getCurrentWeek, getWeeklyItems, getRotationInfo } from './shopRotation';
import { getCurrentDiscounts, hasDiscount, getItemDiscount } from './discountSystem';
import { getInventoryItemsWithInfo, getInventoryStats, sortInventoryItems, filterInventoryItems } from './inventoryUtils';

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã
export const getAllItems = () => {
  const allItems = [];
  Object.values(itemsData.items).forEach(category => {
    Object.values(category).forEach(item => {
      allItems.push(item);
    });
  });
  return allItems;
};

// –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ —Ç–∏–ø—É
export const getItemsByType = (type) => {
  if (type === 'all') {
    return getShopItems();
  }
  // –ò—Å–∫–ª—é—á–∞–µ–º —Å—É–Ω–¥—É–∫–∏ –∏ –æ—Å–æ–±—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  if (type === 'chest' || type === 'special') {
    return [];
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –º–∞–≥–∞–∑–∏–Ω–∞ –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —Ç–∏–ø—É
  const shopItems = getShopItems();
  return shopItems.filter(item => item.type === type);
};

// –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
export const getItemsByRarity = (rarity) => {
  const allItems = getAllItems();
  return allItems.filter(item => item.rarity === rarity);
};

// –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –ø–æ ID
export const getItemById = (id) => {
  const allItems = getAllItems();
  return allItems.find(item => item.id === id);
};

// –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–¥–∫–æ—Å—Ç–∏
export const getRarityInfo = (rarity) => {
  return itemsData.rarity[rarity] || null;
};

// –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–µ
export const getTypeInfo = (type) => {
  return itemsData.types[type] || null;
};

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–∏–ø—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤
export const getAllTypes = () => {
  return Object.keys(itemsData.types).filter(type => 
    type !== 'chest' && type !== 'special'
  );
};

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ä–µ–¥–∫–æ—Å—Ç–∏
export const getAllRarities = () => {
  return Object.keys(itemsData.rarity);
};

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
export const filterItems = (items, filters = {}) => {
  let filteredItems = [...items];

  // –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É
  if (filters.type && filters.type !== 'all') {
    filteredItems = filteredItems.filter(item => item.type === filters.type);
  }

  // –§–∏–ª—å—Ç—Ä –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
  if (filters.rarity && filters.rarity !== 'all') {
    filteredItems = filteredItems.filter(item => item.rarity === filters.rarity);
  }

  // –§–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ
  if (filters.minPrice !== undefined) {
    filteredItems = filteredItems.filter(item => {
      const price = item.price.currency === 'gems' ? item.price.amount * 10 : item.price.amount;
      return price >= filters.minPrice;
    });
  }

  if (filters.maxPrice !== undefined) {
    filteredItems = filteredItems.filter(item => {
      const price = item.price.currency === 'gems' ? item.price.amount * 10 : item.price.amount;
      return price <= filters.maxPrice;
    });
  }

  // –§–∏–ª—å—Ç—Ä –ø–æ –≤–∞–ª—é—Ç–µ
  if (filters.currency) {
    filteredItems = filteredItems.filter(item => item.price.currency === filters.currency);
  }

  // –§–∏–ª—å—Ç—Ä –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥–∞–∂–∏
  if (filters.canSell !== undefined) {
    filteredItems = filteredItems.filter(item => item.canSell === filters.canSell);
  }

  return filteredItems;
};

// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
export const sortItems = (items, sortBy = 'name', sortOrder = 'asc') => {
  const sortedItems = [...items];

  sortedItems.sort((a, b) => {
    let aValue, bValue;

    switch (sortBy) {
      case 'name':
        aValue = a.name.toLowerCase();
        bValue = b.name.toLowerCase();
        break;
      case 'price':
        aValue = a.price.currency === 'gems' ? a.price.amount * 10 : a.price.amount;
        bValue = b.price.currency === 'gems' ? b.price.amount * 10 : b.price.amount;
        break;
      case 'rarity':
        const rarityOrder = { common: 1, rare: 2, mythical: 3, legendary: 4 };
        aValue = rarityOrder[a.rarity] || 0;
        bValue = rarityOrder[b.rarity] || 0;
        break;
      case 'type':
        aValue = a.type.toLowerCase();
        bValue = b.type.toLowerCase();
        break;
      default:
        aValue = a.name.toLowerCase();
        bValue = b.name.toLowerCase();
    }

    if (sortOrder === 'desc') {
      return bValue > aValue ? 1 : bValue < aValue ? -1 : 0;
    } else {
      return aValue > bValue ? 1 : aValue < bValue ? -1 : 0;
    }
  });

  return sortedItems;
};

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
export const formatPrice = (price) => {
  if (price.currency === 'gems') {
    return `${price.amount} üíé`;
  } else {
    return `${price.amount} ü™ô`;
  }
};

// –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç —Ä–µ–¥–∫–æ—Å—Ç–∏
export const getRarityColor = (rarity) => {
  const rarityInfo = getRarityInfo(rarity);
  return rarityInfo ? rarityInfo.color : '#9ca3af';
};

// –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç —Ç–∏–ø–∞
export const getTypeColor = (type) => {
  const typeInfo = getTypeInfo(type);
  return typeInfo ? typeInfo.color : '#6b7280';
};

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ–¥–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç
export const canSellItem = (item) => {
  return item.canSell && item.sellPrice > 0;
};

// –ü–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –ø—Ä–æ–¥–∞–∂–∏
export const getSellPrice = (item) => {
  return item.sellPrice || 0;
};

// –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ (—Ç–æ–ª—å–∫–æ —Ç–µ, —á—Ç–æ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å)
export const getShopItems = () => {
  const allItems = getAllItems();
  const availableItems = allItems.filter(item => 
    item.price && 
    item.price.amount > 0 && 
    item.type !== 'chest' && 
    item.type !== 'special'
  );
  
  // –í—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –æ–¥–µ–∂–¥—ã –≤ –º–∞–≥–∞–∑–∏–Ω
  const clothingItems = Object.values(itemsData.items.clothing || {});
  const allAvailableItems = [...availableItems, ...clothingItems];
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ä–æ—Ç–∞—Ü–∏—é –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞ (—Ç–æ–ª—å–∫–æ –∫ –æ–±—ã—á–Ω—ã–º –ø—Ä–µ–¥–º–µ—Ç–∞–º, –Ω–µ –∫ –æ–¥–µ–∂–¥–µ)
  const currentWeek = getCurrentWeek();
  const rotatedItems = getWeeklyItems(availableItems, currentWeek);
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–∫–∏–¥–∫–∏
  const discounts = getCurrentDiscounts(rotatedItems);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∏–¥–∫–∞—Ö –∫ –ø—Ä–µ–¥–º–µ—Ç–∞–º
  const itemsWithDiscounts = rotatedItems.map(item => {
    if (hasDiscount(item.id, discounts)) {
      const discount = getItemDiscount(item.id, discounts);
      return {
        ...item,
        hasDiscount: true,
        originalPrice: discount.originalPrice,
        discountPrice: discount.discountPrice,
        discountPercent: discount.discountPercent
      };
    }
    return item;
  });
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã: –æ–±—ã—á–Ω—ã–µ —Å —Ä–æ—Ç–∞—Ü–∏–µ–π –∏ –æ–¥–µ–∂–¥—É –±–µ–∑ —Ä–æ—Ç–∞—Ü–∏–∏
  return [...itemsWithDiscounts, ...clothingItems];
};

// –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è (—Ç–æ–ª—å–∫–æ —Ç–µ, —á—Ç–æ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å)
export const getInventoryItems = () => {
  const allItems = getAllItems();
  return allItems.filter(item => canSellItem(item));
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø–∏—Ç–æ–º—Ü–∞
export const getPetSpecialText = (pet) => {
  if (!pet.special) return null;
  
  const { type, ...params } = pet.special;
  
  switch (type) {
    case 'cube':
      return `üé≤ –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä: +${params.modificator}`;
    case 'relation':
      return `üíï –û—Ç–Ω–æ—à–µ–Ω–∏—è: +${params.increase}`;
    case 'money':
      return `üí∞ –î–µ–Ω—å–≥–∏: +${params.increase}`;
    case 'reroll':
      return `üîÑ –ü–µ—Ä–µ–±—Ä–æ—Å: ${params.count}`;
    case 'price':
      return `üíé –¶–µ–Ω–∞: ${params.value}`;
    case 'stat':
      const statNames = {
        charisma: '–•–∞—Ä–∏–∑–º–∞',
        coldness: '–•–ª–∞–¥–Ω–æ–∫—Ä–æ–≤–∏–µ',
        sensitivity: '–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
        cunning: '–•–∏—Ç—Ä–æ—Å—Ç—å',
        determination: '–†–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
        intelligence: '–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç'
      };
      return `üìä ${statNames[params.stat_type]}: +${params.bonus}`;
    default:
      return null;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
export const getPetSpecialIcon = (specialType) => {
  switch (specialType) {
    case 'cube':
      return 'üé≤';
    case 'relation':
      return 'üíï';
    case 'money':
      return 'üí∞';
    case 'reroll':
      return 'üîÑ';
    case 'price':
      return 'üíé';
    case 'stat':
      return 'üìä';
    default:
      return '‚ú®';
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
export const getPetSpecialColor = (specialType) => {
  switch (specialType) {
    case 'cube':
      return '#8B5CF6'; // –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
    case 'relation':
      return '#EC4899'; // –†–æ–∑–æ–≤—ã–π
    case 'money':
      return '#F59E0B'; // –û—Ä–∞–Ω–∂–µ–≤—ã–π
    case 'reroll':
      return '#10B981'; // –ó–µ–ª–µ–Ω—ã–π
    case 'price':
      return '#F59E0B'; // –ó–æ–ª–æ—Ç–æ–π
    case 'stat':
      return '#3B82F6'; // –°–∏–Ω–∏–π
    default:
      return '#6B7280'; // –°–µ—Ä—ã–π
  }
}; 

// –†–µ—ç–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
export { getRotationInfo } from './shopRotation';
export { getCurrentDiscounts } from './discountSystem';
export { getInventoryItemsWithInfo, getInventoryStats, sortInventoryItems, filterInventoryItems } from './inventoryUtils'; 